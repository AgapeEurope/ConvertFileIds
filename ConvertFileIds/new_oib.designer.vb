'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34014
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="oib")>  _
Partial Public Class new_oibDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertAP_Story(instance As AP_Story)
    End Sub
  Partial Private Sub UpdateAP_Story(instance As AP_Story)
    End Sub
  Partial Private Sub DeleteAP_Story(instance As AP_Story)
    End Sub
  Partial Private Sub InsertAP_Stories_Module_Channel(instance As AP_Stories_Module_Channel)
    End Sub
  Partial Private Sub UpdateAP_Stories_Module_Channel(instance As AP_Stories_Module_Channel)
    End Sub
  Partial Private Sub DeleteAP_Stories_Module_Channel(instance As AP_Stories_Module_Channel)
    End Sub
  Partial Private Sub InsertFile(instance As File)
    End Sub
  Partial Private Sub UpdateFile(instance As File)
    End Sub
  Partial Private Sub DeleteFile(instance As File)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.ConvertFileIds.My.MySettings.Default.oibConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property AP_Stories() As System.Data.Linq.Table(Of AP_Story)
		Get
			Return Me.GetTable(Of AP_Story)
		End Get
	End Property
	
	Public ReadOnly Property AP_Stories_Module_Channels() As System.Data.Linq.Table(Of AP_Stories_Module_Channel)
		Get
			Return Me.GetTable(Of AP_Stories_Module_Channel)
		End Get
	End Property
	
	Public ReadOnly Property Files() As System.Data.Linq.Table(Of File)
		Get
			Return Me.GetTable(Of File)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_Stories")>  _
Partial Public Class AP_Story
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _StoryId As Integer
	
	Private _Headline As String
	
	Private _PhotoId As Integer
	
	Private _StoryText As String
	
	Private _StoryDate As Date
	
	Private _Author As String
	
	Private _EditorBoost As System.Nullable(Of Date)
	
	Private _Editable As Boolean
	
	Private _RegionId As System.Nullable(Of Integer)
	
	Private _UserId As Integer
	
	Private _IsVisible As Boolean
	
	Private _Sent As Boolean
	
	Private _PortalID As Integer
	
	Private _TabId As System.Nullable(Of Integer)
	
	Private _TabModuleId As System.Nullable(Of Integer)
	
	Private _Longitude As System.Nullable(Of Double)
	
	Private _Latitude As System.Nullable(Of Double)
	
	Private _TranslationGroup As System.Nullable(Of Integer)
	
	Private _Language As String
	
	Private _Subtitle As String
	
	Private _TextSample As String
	
	Private _Field1 As String
	
	Private _Field2 As String
	
	Private _Field3 As String
	
	Private _UpdatedDate As System.Nullable(Of Date)
	
	Private _Keywords As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStoryIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnStoryIdChanged()
    End Sub
    Partial Private Sub OnHeadlineChanging(value As String)
    End Sub
    Partial Private Sub OnHeadlineChanged()
    End Sub
    Partial Private Sub OnPhotoIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnPhotoIdChanged()
    End Sub
    Partial Private Sub OnStoryTextChanging(value As String)
    End Sub
    Partial Private Sub OnStoryTextChanged()
    End Sub
    Partial Private Sub OnStoryDateChanging(value As Date)
    End Sub
    Partial Private Sub OnStoryDateChanged()
    End Sub
    Partial Private Sub OnAuthorChanging(value As String)
    End Sub
    Partial Private Sub OnAuthorChanged()
    End Sub
    Partial Private Sub OnEditorBoostChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEditorBoostChanged()
    End Sub
    Partial Private Sub OnEditableChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEditableChanged()
    End Sub
    Partial Private Sub OnRegionIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRegionIdChanged()
    End Sub
    Partial Private Sub OnUserIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnUserIdChanged()
    End Sub
    Partial Private Sub OnIsVisibleChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsVisibleChanged()
    End Sub
    Partial Private Sub OnSentChanging(value As Boolean)
    End Sub
    Partial Private Sub OnSentChanged()
    End Sub
    Partial Private Sub OnPortalIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPortalIDChanged()
    End Sub
    Partial Private Sub OnTabIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTabIdChanged()
    End Sub
    Partial Private Sub OnTabModuleIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTabModuleIdChanged()
    End Sub
    Partial Private Sub OnLongitudeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLongitudeChanged()
    End Sub
    Partial Private Sub OnLatitudeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLatitudeChanged()
    End Sub
    Partial Private Sub OnTranslationGroupChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTranslationGroupChanged()
    End Sub
    Partial Private Sub OnLanguageChanging(value As String)
    End Sub
    Partial Private Sub OnLanguageChanged()
    End Sub
    Partial Private Sub OnSubtitleChanging(value As String)
    End Sub
    Partial Private Sub OnSubtitleChanged()
    End Sub
    Partial Private Sub OnTextSampleChanging(value As String)
    End Sub
    Partial Private Sub OnTextSampleChanged()
    End Sub
    Partial Private Sub OnField1Changing(value As String)
    End Sub
    Partial Private Sub OnField1Changed()
    End Sub
    Partial Private Sub OnField2Changing(value As String)
    End Sub
    Partial Private Sub OnField2Changed()
    End Sub
    Partial Private Sub OnField3Changing(value As String)
    End Sub
    Partial Private Sub OnField3Changed()
    End Sub
    Partial Private Sub OnUpdatedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUpdatedDateChanged()
    End Sub
    Partial Private Sub OnKeywordsChanging(value As String)
    End Sub
    Partial Private Sub OnKeywordsChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StoryId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property StoryId() As Integer
		Get
			Return Me._StoryId
		End Get
		Set
			If ((Me._StoryId = value)  _
						= false) Then
				Me.OnStoryIdChanging(value)
				Me.SendPropertyChanging
				Me._StoryId = value
				Me.SendPropertyChanged("StoryId")
				Me.OnStoryIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Headline", DbType:="NVarChar(154) NOT NULL", CanBeNull:=false)>  _
	Public Property Headline() As String
		Get
			Return Me._Headline
		End Get
		Set
			If (String.Equals(Me._Headline, value) = false) Then
				Me.OnHeadlineChanging(value)
				Me.SendPropertyChanging
				Me._Headline = value
				Me.SendPropertyChanged("Headline")
				Me.OnHeadlineChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhotoId", DbType:="Int NOT NULL")>  _
	Public Property PhotoId() As Integer
		Get
			Return Me._PhotoId
		End Get
		Set
			If ((Me._PhotoId = value)  _
						= false) Then
				Me.OnPhotoIdChanging(value)
				Me.SendPropertyChanging
				Me._PhotoId = value
				Me.SendPropertyChanged("PhotoId")
				Me.OnPhotoIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StoryText", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property StoryText() As String
		Get
			Return Me._StoryText
		End Get
		Set
			If (String.Equals(Me._StoryText, value) = false) Then
				Me.OnStoryTextChanging(value)
				Me.SendPropertyChanging
				Me._StoryText = value
				Me.SendPropertyChanged("StoryText")
				Me.OnStoryTextChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StoryDate", DbType:="SmallDateTime NOT NULL")>  _
	Public Property StoryDate() As Date
		Get
			Return Me._StoryDate
		End Get
		Set
			If ((Me._StoryDate = value)  _
						= false) Then
				Me.OnStoryDateChanging(value)
				Me.SendPropertyChanging
				Me._StoryDate = value
				Me.SendPropertyChanged("StoryDate")
				Me.OnStoryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Author", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Author() As String
		Get
			Return Me._Author
		End Get
		Set
			If (String.Equals(Me._Author, value) = false) Then
				Me.OnAuthorChanging(value)
				Me.SendPropertyChanging
				Me._Author = value
				Me.SendPropertyChanged("Author")
				Me.OnAuthorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EditorBoost", DbType:="SmallDateTime")>  _
	Public Property EditorBoost() As System.Nullable(Of Date)
		Get
			Return Me._EditorBoost
		End Get
		Set
			If (Me._EditorBoost.Equals(value) = false) Then
				Me.OnEditorBoostChanging(value)
				Me.SendPropertyChanging
				Me._EditorBoost = value
				Me.SendPropertyChanged("EditorBoost")
				Me.OnEditorBoostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Editable", DbType:="Bit NOT NULL")>  _
	Public Property Editable() As Boolean
		Get
			Return Me._Editable
		End Get
		Set
			If ((Me._Editable = value)  _
						= false) Then
				Me.OnEditableChanging(value)
				Me.SendPropertyChanging
				Me._Editable = value
				Me.SendPropertyChanged("Editable")
				Me.OnEditableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RegionId", DbType:="Int")>  _
	Public Property RegionId() As System.Nullable(Of Integer)
		Get
			Return Me._RegionId
		End Get
		Set
			If (Me._RegionId.Equals(value) = false) Then
				Me.OnRegionIdChanging(value)
				Me.SendPropertyChanging
				Me._RegionId = value
				Me.SendPropertyChanged("RegionId")
				Me.OnRegionIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="Int NOT NULL")>  _
	Public Property UserId() As Integer
		Get
			Return Me._UserId
		End Get
		Set
			If ((Me._UserId = value)  _
						= false) Then
				Me.OnUserIdChanging(value)
				Me.SendPropertyChanging
				Me._UserId = value
				Me.SendPropertyChanged("UserId")
				Me.OnUserIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsVisible", DbType:="Bit NOT NULL")>  _
	Public Property IsVisible() As Boolean
		Get
			Return Me._IsVisible
		End Get
		Set
			If ((Me._IsVisible = value)  _
						= false) Then
				Me.OnIsVisibleChanging(value)
				Me.SendPropertyChanging
				Me._IsVisible = value
				Me.SendPropertyChanged("IsVisible")
				Me.OnIsVisibleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sent", DbType:="Bit NOT NULL")>  _
	Public Property Sent() As Boolean
		Get
			Return Me._Sent
		End Get
		Set
			If ((Me._Sent = value)  _
						= false) Then
				Me.OnSentChanging(value)
				Me.SendPropertyChanging
				Me._Sent = value
				Me.SendPropertyChanged("Sent")
				Me.OnSentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalID", DbType:="Int NOT NULL")>  _
	Public Property PortalID() As Integer
		Get
			Return Me._PortalID
		End Get
		Set
			If ((Me._PortalID = value)  _
						= false) Then
				Me.OnPortalIDChanging(value)
				Me.SendPropertyChanging
				Me._PortalID = value
				Me.SendPropertyChanged("PortalID")
				Me.OnPortalIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TabId", DbType:="Int")>  _
	Public Property TabId() As System.Nullable(Of Integer)
		Get
			Return Me._TabId
		End Get
		Set
			If (Me._TabId.Equals(value) = false) Then
				Me.OnTabIdChanging(value)
				Me.SendPropertyChanging
				Me._TabId = value
				Me.SendPropertyChanged("TabId")
				Me.OnTabIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TabModuleId", DbType:="Int")>  _
	Public Property TabModuleId() As System.Nullable(Of Integer)
		Get
			Return Me._TabModuleId
		End Get
		Set
			If (Me._TabModuleId.Equals(value) = false) Then
				Me.OnTabModuleIdChanging(value)
				Me.SendPropertyChanging
				Me._TabModuleId = value
				Me.SendPropertyChanged("TabModuleId")
				Me.OnTabModuleIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Longitude", DbType:="Float")>  _
	Public Property Longitude() As System.Nullable(Of Double)
		Get
			Return Me._Longitude
		End Get
		Set
			If (Me._Longitude.Equals(value) = false) Then
				Me.OnLongitudeChanging(value)
				Me.SendPropertyChanging
				Me._Longitude = value
				Me.SendPropertyChanged("Longitude")
				Me.OnLongitudeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Latitude", DbType:="Float")>  _
	Public Property Latitude() As System.Nullable(Of Double)
		Get
			Return Me._Latitude
		End Get
		Set
			If (Me._Latitude.Equals(value) = false) Then
				Me.OnLatitudeChanging(value)
				Me.SendPropertyChanging
				Me._Latitude = value
				Me.SendPropertyChanged("Latitude")
				Me.OnLatitudeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TranslationGroup", DbType:="Int")>  _
	Public Property TranslationGroup() As System.Nullable(Of Integer)
		Get
			Return Me._TranslationGroup
		End Get
		Set
			If (Me._TranslationGroup.Equals(value) = false) Then
				Me.OnTranslationGroupChanging(value)
				Me.SendPropertyChanging
				Me._TranslationGroup = value
				Me.SendPropertyChanged("TranslationGroup")
				Me.OnTranslationGroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Language", DbType:="NVarChar(8)")>  _
	Public Property Language() As String
		Get
			Return Me._Language
		End Get
		Set
			If (String.Equals(Me._Language, value) = false) Then
				Me.OnLanguageChanging(value)
				Me.SendPropertyChanging
				Me._Language = value
				Me.SendPropertyChanged("Language")
				Me.OnLanguageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Subtitle", DbType:="NVarChar(80)")>  _
	Public Property Subtitle() As String
		Get
			Return Me._Subtitle
		End Get
		Set
			If (String.Equals(Me._Subtitle, value) = false) Then
				Me.OnSubtitleChanging(value)
				Me.SendPropertyChanging
				Me._Subtitle = value
				Me.SendPropertyChanged("Subtitle")
				Me.OnSubtitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TextSample", DbType:="NVarChar(MAX)")>  _
	Public Property TextSample() As String
		Get
			Return Me._TextSample
		End Get
		Set
			If (String.Equals(Me._TextSample, value) = false) Then
				Me.OnTextSampleChanging(value)
				Me.SendPropertyChanging
				Me._TextSample = value
				Me.SendPropertyChanged("TextSample")
				Me.OnTextSampleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Field1", DbType:="NVarChar(MAX)")>  _
	Public Property Field1() As String
		Get
			Return Me._Field1
		End Get
		Set
			If (String.Equals(Me._Field1, value) = false) Then
				Me.OnField1Changing(value)
				Me.SendPropertyChanging
				Me._Field1 = value
				Me.SendPropertyChanged("Field1")
				Me.OnField1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Field2", DbType:="NVarChar(50)")>  _
	Public Property Field2() As String
		Get
			Return Me._Field2
		End Get
		Set
			If (String.Equals(Me._Field2, value) = false) Then
				Me.OnField2Changing(value)
				Me.SendPropertyChanging
				Me._Field2 = value
				Me.SendPropertyChanged("Field2")
				Me.OnField2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Field3", DbType:="NVarChar(50)")>  _
	Public Property Field3() As String
		Get
			Return Me._Field3
		End Get
		Set
			If (String.Equals(Me._Field3, value) = false) Then
				Me.OnField3Changing(value)
				Me.SendPropertyChanging
				Me._Field3 = value
				Me.SendPropertyChanged("Field3")
				Me.OnField3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdatedDate", DbType:="SmallDateTime")>  _
	Public Property UpdatedDate() As System.Nullable(Of Date)
		Get
			Return Me._UpdatedDate
		End Get
		Set
			If (Me._UpdatedDate.Equals(value) = false) Then
				Me.OnUpdatedDateChanging(value)
				Me.SendPropertyChanging
				Me._UpdatedDate = value
				Me.SendPropertyChanged("UpdatedDate")
				Me.OnUpdatedDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keywords", DbType:="NVarChar(100)")>  _
	Public Property Keywords() As String
		Get
			Return Me._Keywords
		End Get
		Set
			If (String.Equals(Me._Keywords, value) = false) Then
				Me.OnKeywordsChanging(value)
				Me.SendPropertyChanging
				Me._Keywords = value
				Me.SendPropertyChanged("Keywords")
				Me.OnKeywordsChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_Stories_Module_Channel")>  _
Partial Public Class AP_Stories_Module_Channel
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ChannelId As Integer
	
	Private _Type As Short
	
	Private _URL As String
	
	Private _Weight As Double
	
	Private _Language As String
	
	Private _ChannelTitle As String
	
	Private _ImageId As String
	
	Private _StoryModuleId As System.Nullable(Of Integer)
	
	Private _Longitude As System.Nullable(Of Double)
	
	Private _Latitude As System.Nullable(Of Double)
	
	Private _AutoDetectLanguage As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnChannelIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnChannelIdChanged()
    End Sub
    Partial Private Sub OnTypeChanging(value As Short)
    End Sub
    Partial Private Sub OnTypeChanged()
    End Sub
    Partial Private Sub OnURLChanging(value As String)
    End Sub
    Partial Private Sub OnURLChanged()
    End Sub
    Partial Private Sub OnWeightChanging(value As Double)
    End Sub
    Partial Private Sub OnWeightChanged()
    End Sub
    Partial Private Sub OnLanguageChanging(value As String)
    End Sub
    Partial Private Sub OnLanguageChanged()
    End Sub
    Partial Private Sub OnChannelTitleChanging(value As String)
    End Sub
    Partial Private Sub OnChannelTitleChanged()
    End Sub
    Partial Private Sub OnImageIdChanging(value As String)
    End Sub
    Partial Private Sub OnImageIdChanged()
    End Sub
    Partial Private Sub OnStoryModuleIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStoryModuleIdChanged()
    End Sub
    Partial Private Sub OnLongitudeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLongitudeChanged()
    End Sub
    Partial Private Sub OnLatitudeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLatitudeChanged()
    End Sub
    Partial Private Sub OnAutoDetectLanguageChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnAutoDetectLanguageChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChannelId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ChannelId() As Integer
		Get
			Return Me._ChannelId
		End Get
		Set
			If ((Me._ChannelId = value)  _
						= false) Then
				Me.OnChannelIdChanging(value)
				Me.SendPropertyChanging
				Me._ChannelId = value
				Me.SendPropertyChanged("ChannelId")
				Me.OnChannelIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type", DbType:="SmallInt NOT NULL")>  _
	Public Property Type() As Short
		Get
			Return Me._Type
		End Get
		Set
			If ((Me._Type = value)  _
						= false) Then
				Me.OnTypeChanging(value)
				Me.SendPropertyChanging
				Me._Type = value
				Me.SendPropertyChanged("Type")
				Me.OnTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_URL", DbType:="NVarChar(250)")>  _
	Public Property URL() As String
		Get
			Return Me._URL
		End Get
		Set
			If (String.Equals(Me._URL, value) = false) Then
				Me.OnURLChanging(value)
				Me.SendPropertyChanging
				Me._URL = value
				Me.SendPropertyChanged("URL")
				Me.OnURLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Weight", DbType:="Float NOT NULL")>  _
	Public Property Weight() As Double
		Get
			Return Me._Weight
		End Get
		Set
			If ((Me._Weight = value)  _
						= false) Then
				Me.OnWeightChanging(value)
				Me.SendPropertyChanging
				Me._Weight = value
				Me.SendPropertyChanged("Weight")
				Me.OnWeightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Language", DbType:="NVarChar(100)")>  _
	Public Property Language() As String
		Get
			Return Me._Language
		End Get
		Set
			If (String.Equals(Me._Language, value) = false) Then
				Me.OnLanguageChanging(value)
				Me.SendPropertyChanging
				Me._Language = value
				Me.SendPropertyChanged("Language")
				Me.OnLanguageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChannelTitle", DbType:="NVarChar(154)")>  _
	Public Property ChannelTitle() As String
		Get
			Return Me._ChannelTitle
		End Get
		Set
			If (String.Equals(Me._ChannelTitle, value) = false) Then
				Me.OnChannelTitleChanging(value)
				Me.SendPropertyChanging
				Me._ChannelTitle = value
				Me.SendPropertyChanged("ChannelTitle")
				Me.OnChannelTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImageId", DbType:="NVarChar(250)")>  _
	Public Property ImageId() As String
		Get
			Return Me._ImageId
		End Get
		Set
			If (String.Equals(Me._ImageId, value) = false) Then
				Me.OnImageIdChanging(value)
				Me.SendPropertyChanging
				Me._ImageId = value
				Me.SendPropertyChanged("ImageId")
				Me.OnImageIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StoryModuleId", DbType:="Int")>  _
	Public Property StoryModuleId() As System.Nullable(Of Integer)
		Get
			Return Me._StoryModuleId
		End Get
		Set
			If (Me._StoryModuleId.Equals(value) = false) Then
				Me.OnStoryModuleIdChanging(value)
				Me.SendPropertyChanging
				Me._StoryModuleId = value
				Me.SendPropertyChanged("StoryModuleId")
				Me.OnStoryModuleIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Longitude", DbType:="Float")>  _
	Public Property Longitude() As System.Nullable(Of Double)
		Get
			Return Me._Longitude
		End Get
		Set
			If (Me._Longitude.Equals(value) = false) Then
				Me.OnLongitudeChanging(value)
				Me.SendPropertyChanging
				Me._Longitude = value
				Me.SendPropertyChanged("Longitude")
				Me.OnLongitudeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Latitude", DbType:="Float")>  _
	Public Property Latitude() As System.Nullable(Of Double)
		Get
			Return Me._Latitude
		End Get
		Set
			If (Me._Latitude.Equals(value) = false) Then
				Me.OnLatitudeChanging(value)
				Me.SendPropertyChanging
				Me._Latitude = value
				Me.SendPropertyChanged("Latitude")
				Me.OnLatitudeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AutoDetectLanguage", DbType:="Bit")>  _
	Public Property AutoDetectLanguage() As System.Nullable(Of Boolean)
		Get
			Return Me._AutoDetectLanguage
		End Get
		Set
			If (Me._AutoDetectLanguage.Equals(value) = false) Then
				Me.OnAutoDetectLanguageChanging(value)
				Me.SendPropertyChanging
				Me._AutoDetectLanguage = value
				Me.SendPropertyChanged("AutoDetectLanguage")
				Me.OnAutoDetectLanguageChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Files")>  _
Partial Public Class File
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FileId As Integer
	
	Private _PortalId As System.Nullable(Of Integer)
	
	Private _FileName As String
	
	Private _Extension As String
	
	Private _Size As Integer
	
	Private _Width As System.Nullable(Of Integer)
	
	Private _Height As System.Nullable(Of Integer)
	
	Private _ContentType As String
	
	Private _FolderID As Integer
	
	Private _Content As System.Data.Linq.Binary
	
	Private _CreatedByUserID As System.Nullable(Of Integer)
	
	Private _CreatedOnDate As System.Nullable(Of Date)
	
	Private _LastModifiedByUserID As System.Nullable(Of Integer)
	
	Private _LastModifiedOnDate As System.Nullable(Of Date)
	
	Private _UniqueId As System.Guid
	
	Private _VersionGuid As System.Guid
	
	Private _SHA1Hash As String
	
	Private _LastModificationTime As Date
	
	Private _Folder As String
	
	Private _Title As String
	
	Private _StartDate As Date
	
	Private _EnablePublishPeriod As Boolean
	
	Private _EndDate As System.Nullable(Of Date)
	
	Private _PublishedVersion As Integer
	
	Private _ContentItemID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFileIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnFileIdChanged()
    End Sub
    Partial Private Sub OnPortalIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPortalIdChanged()
    End Sub
    Partial Private Sub OnFileNameChanging(value As String)
    End Sub
    Partial Private Sub OnFileNameChanged()
    End Sub
    Partial Private Sub OnExtensionChanging(value As String)
    End Sub
    Partial Private Sub OnExtensionChanged()
    End Sub
    Partial Private Sub OnSizeChanging(value As Integer)
    End Sub
    Partial Private Sub OnSizeChanged()
    End Sub
    Partial Private Sub OnWidthChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWidthChanged()
    End Sub
    Partial Private Sub OnHeightChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHeightChanged()
    End Sub
    Partial Private Sub OnContentTypeChanging(value As String)
    End Sub
    Partial Private Sub OnContentTypeChanged()
    End Sub
    Partial Private Sub OnFolderIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnFolderIDChanged()
    End Sub
    Partial Private Sub OnContentChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnContentChanged()
    End Sub
    Partial Private Sub OnCreatedByUserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCreatedByUserIDChanged()
    End Sub
    Partial Private Sub OnCreatedOnDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreatedOnDateChanged()
    End Sub
    Partial Private Sub OnLastModifiedByUserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLastModifiedByUserIDChanged()
    End Sub
    Partial Private Sub OnLastModifiedOnDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastModifiedOnDateChanged()
    End Sub
    Partial Private Sub OnUniqueIdChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnUniqueIdChanged()
    End Sub
    Partial Private Sub OnVersionGuidChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnVersionGuidChanged()
    End Sub
    Partial Private Sub OnSHA1HashChanging(value As String)
    End Sub
    Partial Private Sub OnSHA1HashChanged()
    End Sub
    Partial Private Sub OnLastModificationTimeChanging(value As Date)
    End Sub
    Partial Private Sub OnLastModificationTimeChanged()
    End Sub
    Partial Private Sub OnFolderChanging(value As String)
    End Sub
    Partial Private Sub OnFolderChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnStartDateChanging(value As Date)
    End Sub
    Partial Private Sub OnStartDateChanged()
    End Sub
    Partial Private Sub OnEnablePublishPeriodChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEnablePublishPeriodChanged()
    End Sub
    Partial Private Sub OnEndDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEndDateChanged()
    End Sub
    Partial Private Sub OnPublishedVersionChanging(value As Integer)
    End Sub
    Partial Private Sub OnPublishedVersionChanged()
    End Sub
    Partial Private Sub OnContentItemIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnContentItemIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FileId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property FileId() As Integer
		Get
			Return Me._FileId
		End Get
		Set
			If ((Me._FileId = value)  _
						= false) Then
				Me.OnFileIdChanging(value)
				Me.SendPropertyChanging
				Me._FileId = value
				Me.SendPropertyChanged("FileId")
				Me.OnFileIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalId", DbType:="Int")>  _
	Public Property PortalId() As System.Nullable(Of Integer)
		Get
			Return Me._PortalId
		End Get
		Set
			If (Me._PortalId.Equals(value) = false) Then
				Me.OnPortalIdChanging(value)
				Me.SendPropertyChanging
				Me._PortalId = value
				Me.SendPropertyChanged("PortalId")
				Me.OnPortalIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FileName", DbType:="NVarChar(246) NOT NULL", CanBeNull:=false)>  _
	Public Property FileName() As String
		Get
			Return Me._FileName
		End Get
		Set
			If (String.Equals(Me._FileName, value) = false) Then
				Me.OnFileNameChanging(value)
				Me.SendPropertyChanging
				Me._FileName = value
				Me.SendPropertyChanged("FileName")
				Me.OnFileNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Extension", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Extension() As String
		Get
			Return Me._Extension
		End Get
		Set
			If (String.Equals(Me._Extension, value) = false) Then
				Me.OnExtensionChanging(value)
				Me.SendPropertyChanging
				Me._Extension = value
				Me.SendPropertyChanged("Extension")
				Me.OnExtensionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Size", DbType:="Int NOT NULL")>  _
	Public Property Size() As Integer
		Get
			Return Me._Size
		End Get
		Set
			If ((Me._Size = value)  _
						= false) Then
				Me.OnSizeChanging(value)
				Me.SendPropertyChanging
				Me._Size = value
				Me.SendPropertyChanged("Size")
				Me.OnSizeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Width", DbType:="Int")>  _
	Public Property Width() As System.Nullable(Of Integer)
		Get
			Return Me._Width
		End Get
		Set
			If (Me._Width.Equals(value) = false) Then
				Me.OnWidthChanging(value)
				Me.SendPropertyChanging
				Me._Width = value
				Me.SendPropertyChanged("Width")
				Me.OnWidthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Height", DbType:="Int")>  _
	Public Property Height() As System.Nullable(Of Integer)
		Get
			Return Me._Height
		End Get
		Set
			If (Me._Height.Equals(value) = false) Then
				Me.OnHeightChanging(value)
				Me.SendPropertyChanging
				Me._Height = value
				Me.SendPropertyChanged("Height")
				Me.OnHeightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContentType", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false)>  _
	Public Property ContentType() As String
		Get
			Return Me._ContentType
		End Get
		Set
			If (String.Equals(Me._ContentType, value) = false) Then
				Me.OnContentTypeChanging(value)
				Me.SendPropertyChanging
				Me._ContentType = value
				Me.SendPropertyChanged("ContentType")
				Me.OnContentTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FolderID", DbType:="Int NOT NULL")>  _
	Public Property FolderID() As Integer
		Get
			Return Me._FolderID
		End Get
		Set
			If ((Me._FolderID = value)  _
						= false) Then
				Me.OnFolderIDChanging(value)
				Me.SendPropertyChanging
				Me._FolderID = value
				Me.SendPropertyChanged("FolderID")
				Me.OnFolderIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Content", DbType:="Image", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Content() As System.Data.Linq.Binary
		Get
			Return Me._Content
		End Get
		Set
			If (Object.Equals(Me._Content, value) = false) Then
				Me.OnContentChanging(value)
				Me.SendPropertyChanging
				Me._Content = value
				Me.SendPropertyChanged("Content")
				Me.OnContentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedByUserID", DbType:="Int")>  _
	Public Property CreatedByUserID() As System.Nullable(Of Integer)
		Get
			Return Me._CreatedByUserID
		End Get
		Set
			If (Me._CreatedByUserID.Equals(value) = false) Then
				Me.OnCreatedByUserIDChanging(value)
				Me.SendPropertyChanging
				Me._CreatedByUserID = value
				Me.SendPropertyChanged("CreatedByUserID")
				Me.OnCreatedByUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedOnDate", DbType:="DateTime")>  _
	Public Property CreatedOnDate() As System.Nullable(Of Date)
		Get
			Return Me._CreatedOnDate
		End Get
		Set
			If (Me._CreatedOnDate.Equals(value) = false) Then
				Me.OnCreatedOnDateChanging(value)
				Me.SendPropertyChanging
				Me._CreatedOnDate = value
				Me.SendPropertyChanged("CreatedOnDate")
				Me.OnCreatedOnDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastModifiedByUserID", DbType:="Int")>  _
	Public Property LastModifiedByUserID() As System.Nullable(Of Integer)
		Get
			Return Me._LastModifiedByUserID
		End Get
		Set
			If (Me._LastModifiedByUserID.Equals(value) = false) Then
				Me.OnLastModifiedByUserIDChanging(value)
				Me.SendPropertyChanging
				Me._LastModifiedByUserID = value
				Me.SendPropertyChanged("LastModifiedByUserID")
				Me.OnLastModifiedByUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastModifiedOnDate", DbType:="DateTime")>  _
	Public Property LastModifiedOnDate() As System.Nullable(Of Date)
		Get
			Return Me._LastModifiedOnDate
		End Get
		Set
			If (Me._LastModifiedOnDate.Equals(value) = false) Then
				Me.OnLastModifiedOnDateChanging(value)
				Me.SendPropertyChanging
				Me._LastModifiedOnDate = value
				Me.SendPropertyChanged("LastModifiedOnDate")
				Me.OnLastModifiedOnDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UniqueId", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property UniqueId() As System.Guid
		Get
			Return Me._UniqueId
		End Get
		Set
			If ((Me._UniqueId = value)  _
						= false) Then
				Me.OnUniqueIdChanging(value)
				Me.SendPropertyChanging
				Me._UniqueId = value
				Me.SendPropertyChanged("UniqueId")
				Me.OnUniqueIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VersionGuid", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property VersionGuid() As System.Guid
		Get
			Return Me._VersionGuid
		End Get
		Set
			If ((Me._VersionGuid = value)  _
						= false) Then
				Me.OnVersionGuidChanging(value)
				Me.SendPropertyChanging
				Me._VersionGuid = value
				Me.SendPropertyChanged("VersionGuid")
				Me.OnVersionGuidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHA1Hash", DbType:="VarChar(40)")>  _
	Public Property SHA1Hash() As String
		Get
			Return Me._SHA1Hash
		End Get
		Set
			If (String.Equals(Me._SHA1Hash, value) = false) Then
				Me.OnSHA1HashChanging(value)
				Me.SendPropertyChanging
				Me._SHA1Hash = value
				Me.SendPropertyChanged("SHA1Hash")
				Me.OnSHA1HashChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastModificationTime", DbType:="DateTime NOT NULL")>  _
	Public Property LastModificationTime() As Date
		Get
			Return Me._LastModificationTime
		End Get
		Set
			If ((Me._LastModificationTime = value)  _
						= false) Then
				Me.OnLastModificationTimeChanging(value)
				Me.SendPropertyChanging
				Me._LastModificationTime = value
				Me.SendPropertyChanged("LastModificationTime")
				Me.OnLastModificationTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Folder", AutoSync:=AutoSync.Always, DbType:="NVarChar(246)", IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Folder() As String
		Get
			Return Me._Folder
		End Get
		Set
			If (String.Equals(Me._Folder, value) = false) Then
				Me.OnFolderChanging(value)
				Me.SendPropertyChanging
				Me._Folder = value
				Me.SendPropertyChanged("Folder")
				Me.OnFolderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(256)")>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me.OnTitleChanging(value)
				Me.SendPropertyChanging
				Me._Title = value
				Me.SendPropertyChanged("Title")
				Me.OnTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="Date NOT NULL")>  _
	Public Property StartDate() As Date
		Get
			Return Me._StartDate
		End Get
		Set
			If ((Me._StartDate = value)  _
						= false) Then
				Me.OnStartDateChanging(value)
				Me.SendPropertyChanging
				Me._StartDate = value
				Me.SendPropertyChanged("StartDate")
				Me.OnStartDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EnablePublishPeriod", DbType:="Bit NOT NULL")>  _
	Public Property EnablePublishPeriod() As Boolean
		Get
			Return Me._EnablePublishPeriod
		End Get
		Set
			If ((Me._EnablePublishPeriod = value)  _
						= false) Then
				Me.OnEnablePublishPeriodChanging(value)
				Me.SendPropertyChanging
				Me._EnablePublishPeriod = value
				Me.SendPropertyChanged("EnablePublishPeriod")
				Me.OnEnablePublishPeriodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDate", DbType:="Date")>  _
	Public Property EndDate() As System.Nullable(Of Date)
		Get
			Return Me._EndDate
		End Get
		Set
			If (Me._EndDate.Equals(value) = false) Then
				Me.OnEndDateChanging(value)
				Me.SendPropertyChanging
				Me._EndDate = value
				Me.SendPropertyChanged("EndDate")
				Me.OnEndDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublishedVersion", DbType:="Int NOT NULL")>  _
	Public Property PublishedVersion() As Integer
		Get
			Return Me._PublishedVersion
		End Get
		Set
			If ((Me._PublishedVersion = value)  _
						= false) Then
				Me.OnPublishedVersionChanging(value)
				Me.SendPropertyChanging
				Me._PublishedVersion = value
				Me.SendPropertyChanged("PublishedVersion")
				Me.OnPublishedVersionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContentItemID", DbType:="Int")>  _
	Public Property ContentItemID() As System.Nullable(Of Integer)
		Get
			Return Me._ContentItemID
		End Get
		Set
			If (Me._ContentItemID.Equals(value) = false) Then
				Me.OnContentItemIDChanging(value)
				Me.SendPropertyChanging
				Me._ContentItemID = value
				Me.SendPropertyChanged("ContentItemID")
				Me.OnContentItemIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
